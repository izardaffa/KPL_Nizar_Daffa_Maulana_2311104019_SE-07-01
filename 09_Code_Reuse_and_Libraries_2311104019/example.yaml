openapi: 3.0.0
info:
  version: 3.0.0
  title: Manajemen Mahasiswa API
  description: API untuk mengelola data mahasiswa dan alamat
  contact: 
    email: rvnkrwn@hotmail.com
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/FazzaAbiyyu/latihan/3.0.0
tags: 
  - name: mahasiswa
    description: Endpoint untuk manajemen mahasiswa
  - name: address
    description: Endpoint untuk manajemen address

paths: 
  /mahasiswa:
    get:
      tags: [mahasiswa]
      summary: Ambil semua data mahasiswa
      responses:
        '200':
          description: Daftar mahasiswa
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Mahasiswa'
    post:
      tags: [mahasiswa]
      summary: Tambah data mahasiswa
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                nim:
                  type: string
                  example: "2211102167"
                nama_lengkap:
                  type: string
                  example: "Revan Kurniawan"
                email:
                  type: string
                  example: rvnkrwn@hotmail.com
                no_hp:
                  type: string
                  example: "08994616677"
                tanggal_lahir:
                  type: string
                  format: date
                  example: "2000-12-01"
                jenis_kelamin:
                  type: string
                  enum: [Laki-laki, Perempuan]
              
      responses:
        '200':
          description: Daftar mahasiswa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mahasiswa'
                
  /mahasiswa/{id}:
    get:
      tags: [mahasiswa]
      summary: Ambil data mahasiswa sesuai ID
      parameters: 
        - in: path
          name: id
          required: true
          schema:
            type: integer
            example: 123
      responses:
        '200':
          description: Daftar mahasiswa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mahasiswa'
    delete:
      tags: [mahasiswa]
      summary: Hapus data mahasiswa sesuai ID
      parameters: 
        - in: path
          name: id
          required: true
          schema:
            type: integer
            example: 123
      responses:
        '200':
          description: Daftar mahasiswa
          content:
            application/json:
              schema:
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: Berhasil menghapus data mahasiswa
components:
  schemas:
    Mahasiswa:
      type: object
      properties:
        id:
          type: integer
          example: 123
        nim:
          type: string
          example: "2211102167"
        nama_lengkap:
          type: string
          example: "Revan Kurniawan"
        email:
          type: string
          example: rvnkrwn@hotmail.com
        no_hp:
          type: string
          example: "08994616677"
        tanggal_lahir:
          type: string
          format: date
          example: "2000-12-01"
        jenis_kelamin:
          type: string
          enum: [Laki-laki, Perempuan]
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time